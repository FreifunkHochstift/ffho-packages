#!/usr/bin/lua

debugdata = ""
ATH9K_DEBUGFS_DIR="/sys/kernel/debug/ieee80211/phy0/ath9k"

-- wrapper for calling systemcommands
function cmd(_command)
	local f = io.popen(_command)
	local l = f:read("*a")
	f:close()
	return "--- START COMMAND " .. _command .. " ---\n" .. l .. "--- END COMMAND " .. _command .. " ---\n\n"
end

-- read contents of a given file
function readFile(_file)
	local f = io.open(_file, "r")
	if f~=nil then
		local l = f:read("*a")
		f:close()
		return "--- BEGIN OF FILE " .. _file .. " ---\n" .. l .. "--- END OF FILE " .. _file .. " ---\n\n"
	else
		return ""
	end
end

-- iterate through list
function list_iter (_table)
	local i = 0
	local n = table.getn(_table)
	return function ()
		i = i + 1
		if i <= n then return _table[i] end
	end
end

localMode = false

-- Should we enter local mode?
if arg[1] == '-l' then
	localMode = true
end

-- search for existing debugreport.txt
local debugFile = io.open("/tmp/debugreport.txt", "r")
if debugFile==nil then
	-- no existing debugreport, let's generate a new one
	
	-- inform the User ;)
	print ('Hello, i will gather some information about your node now.')
	print ('This may take some seconds, please stand by.')
	
	-- first of all, collect some generic information about the system
	debugdata = debugdata .. cmd("uname -n")
	debugdata = debugdata .. cmd("cat /lib/gluon/release")
	debugdata = debugdata .. cmd("cat /tmp/sysinfo/model")
	debugdata = debugdata .. cmd("uptime")
	debugdata = debugdata .. cmd("date")
	
	-- now get some information about the network status
	debugdata = debugdata .. cmd("ip addr show")
	debugdata = debugdata .. cmd("ip route show")
	
	-- get wireless status
	debugdata = debugdata .. cmd("iw phy phy0 info")
	debugdata = debugdata .. cmd("iw dev wlan0 info")
	debugdata = debugdata .. cmd("iw dev wlan0 station dump")
	debugdata = debugdata .. cmd("iw dev wlan0-1 station dump")
	debugdata = debugdata .. cmd("iwinfo phy0 scan")
	debugdata = debugdata .. cmd("iwinfo wlan0 info")
	debugdata = debugdata .. cmd("iwinfo wlan0-1 info")
	debugdata = debugdata .. cmd("iwinfo wlan0 assoclist")
	debugdata = debugdata .. cmd("iwinfo wlan0-1 assoclist")
	
	-- try to get some more information about wlan hardware status
	_files = {"reset", "queues", "interrupt"}
	for file in list_iter(_files) do
		debugdata = debugdata .. readFile(ATH9K_DEBUGFS_DIR .. "/" .. file)
	end
	
	-- sleep ten seconds and read interrupt again
	os.execute("sleep 10")
	debugdata = debugdata .. readFile(ATH9K_DEBUGFS_DIR .. "/interrupt")
	
	_files = {"ani", "base_eeprom", "dma", "dump_nfcal", "misc", "modal_eeprom", "phy_err", "recv", "xmit"}
	for file in list_iter(_files) do
		debugdata = debugdata .. readFile(ATH9K_DEBUGFS_DIR .. "/" .. file)
	end
	
	-- get batman status
	debugdata = debugdata .. cmd("batctl gwl") 
	debugdata = debugdata .. cmd("batctl tl")
	
	-- finally get fastd status
	os.execute("killall -USR1 fastd 2>/dev/null")
	debugdata = debugdata .. cmd("logread")
	
	-- write debugreport to file
	debugFile = io.open("/tmp/debugreport.txt", "w")
	debugFile:write(debugdata)
	debugFile:close()
else
	print('I found an old debugreport.')
end

-- if local mode is requested print the report, otherwise send it to the admin team
siteConfig = require("gluon.site_config")
if localMode then
	print ('As requested, i will not send the report, here it is:')
	print (debugdata)
	os.exit(0)
else
	print('Sending report to Admin-Team ...')
	local reportSent = false
	local port = siteConfig.debugserver.port
	for host in list_iter(siteConfig.debugserver.host) do
		print('Trying ' .. host)
		if os.execute("cat /tmp/debugreport.txt | nc " .. host .. " " .. port) and reportSent == false then
			reportSent = true
		end
	end

	if reportSent then
		print()
		os.execute("rm /tmp/debugreport.txt")
		print('Report was sent, the Adminteam has been informed.')
		print('My job is done, good bye')
	else
		print('Sorry, i could\'t send the report. I will try it again')
		print('when this script will be invoked the next time.')
		print('Good bye')
	end
end

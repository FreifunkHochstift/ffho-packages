#!/bin/sh

ATH9K_DEBUGFS_DIR="/sys/kernel/debug/ieee80211/phy0/ath9k"

local=false
while getopts l opt
do
	case $opt in
		l)
			local=true;;
	esac
done

if ! $local ; then
	export tf="$(mktemp -t ffpb-debug.XXXXXX)"
	exec 3>&2 >"$tf" 2>&1
fi

sysinfo() {
	echo -en "Hostname = "
	uname -n
	echo -en "Gluon Release = "
	cat /lib/gluon/release
	echo -en "Node Model = "
	cat /tmp/sysinfo/model
	echo -en "Uptime = "
	uptime
	echo -en "Timestamp = "
	date
}

cmd() {
        echo "--- START $* ---"
        "$@"
        echo "--- END ($?) $* ---"
        echo
}

read_file_content() {
	echo "--- START OF FILE CONTENT ($*) ---"
	/bin/cat "$@"
	echo "--- END OF FILE CONTENT ($*) ---"
	echo
}

cmd sysinfo
cmd ip addr show
cmd ip route show
cmd iw phy phy0 info
cmd iw dev wlan0 info
cmd iw dev wlan0 station dump
cmd iw dev wlan0-1 station dump
cmd /usr/bin/iwinfo phy0 scan
cmd /usr/bin/iwinfo wlan0 info
cmd /usr/bin/iwinfo wlan0-1 info
cmd /usr/bin/iwinfo wlan0 assoclist
cmd /usr/bin/iwinfo wlan0-1 assoclist
if [ -d $ATH9K_DEBUGFS_DIR ] ; then
	# data required for gluon "wifi blackout" bug-reports as requested in
	# https://github.com/freifunk-gluon/gluon/issues/130 
	for filename in reset queues interrupt ; do
		read_file_content "${ATH9K_DEBUGFS_DIR}/${filename}"
	done
	sleep 10 && read_file_content "${ATH9K_DEBUGFS_DIR}/interrupt"
	# ... and some additional debug data
	for filename in ani base_eeprom dma dump_nfcal misc modal_eeprom phy_err recv xmit ; do
		read_file_content "${ATH9K_DEBUGFS_DIR}/${filename}"
	done
fi
cmd batctl gwl
cmd batctl tl
killall -USR1 fastd 2>/dev/null
cmd logread

if $local ; then
	echo "No information has been sent to the ffpb-team."
else
	exec >&3 2>&1

	echo "Sending report (stored in $tf) to ffpb-team ..."
	HOST=$(lua -e 'print(require("gluon.site_config").debugserver.host)')
	PORT=$(lua -e 'print(require("gluon.site_config").debugserver.port)')
	code=`gzip -c $tf | nc $HOST $PORT`
	if [ $? -eq 0 ]; then
		echo "Report-ID: $code"
	else
		echo "Failed to send report :( but storing the file and sending it later \o/"
		mkdir -p /var/cache/ff/debug
		gzip -c "$tf" > /var/cache/ff/debug/stored.ff-debug.gz
	fi
	#TODO: rm "$tf"
fi
